<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.jun.dao.ItemMapper">
  <resultMap id="BaseResultMap" type="pers.jun.pojo.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="category" jdbcType="INTEGER" property="category" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, price, description, sales, img_url, category
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pers.jun.pojo.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into item (id, title, price, 
      description, sales, img_url, 
      category)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{sales,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, 
      #{category,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pers.jun.pojo.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="category != null">
        category,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pers.jun.pojo.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update item
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.jun.pojo.Item">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update item
    set title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      sales = #{sales,jdbcType=INTEGER},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--增加销量-->
  <update id="increaseSales">
    update item
    set sales = sales + #{amount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据分类id查-->
  <select id="selectByCategory" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
    where category = #{categoryId,jdbcType=INTEGER}
  </select>

  <!--查询所有-->
  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
  </select>

  <!--查询热门商品-->
  <select id="getPopular" parameterType="integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
    order by sales desc limit #{count}
  </select>

  <!--模糊查找-->
  <select id="getListByName" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from item
    where title LIKE CONCAT('%',#{key},'%')
  </select>

  <!--查询活动中的商品-->
  <select id="getPromoItems" resultMap="BaseResultMap">
    select a.*,b.promo_item_price price
    from
        (select item.id,item.title,item.description,item.sales,item.img_url,item.category,it.stock from item
        left join
        (select item_id,stock from item_stock) it
        on item.id = it.item_id) a
    right join
        (select promo.* from promo where NOW() between start_date and end_date ) b
    on a.id = b.item_id
  </select>
</mapper>